plugins {
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group 'com.hellofintech.hellofunding'
version '1.0-SNAPSHOT'
sourceCompatibility = '17'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'mysql:mysql-connector-java:8.0.33'

    /*
	 * web
	 */
    implementation 'org.springframework.boot:spring-boot-starter-web'

    /*
     * @ConfigurationProperties 를 사용하기 위한 의존성
     * application.yml 파일의 값을 읽어와서 멤버변수에 자동 할당
     */
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    /*
	 * jpa + querydsl
	 */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-apt"
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    /*
     * lombok 라이브러리 : Constructor, Getter, Setter 코드 자동생성
     */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /*
     * Spring REST Docs
     */
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    /*
     * test
     */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

/*
 * queryDSL
 */
def querydslDir= layout.buildDirectory.dir("generated/querydsl").get().asFile

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}

compileQuerydsl{
    if(file(querydslDir).exists())
        delete(file(querydslDir))
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}